{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/stikies/src/CreatNote.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatNote = props => {\n  _s();\n\n  const [expend, setexpand] = useState(false);\n  const [note, updnote] = useState({\n    title: \"\",\n    txtar: \"\"\n  }); // for store what we type in input to an array\n\n  const addnote = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    updnote(prevalue => {\n      return { ...prevalue,\n        [name]: value\n      };\n    });\n  }; //for render save data when button click\n\n\n  const SaveNote = event => {\n    event.preventDefault();\n    props.passNote(note);\n    updnote({\n      title: \"\",\n      txtar: \"\"\n    });\n  };\n\n  const expandIt = () => {\n    setexpand(true);\n  };\n\n  const bcknrml = () => {\n    setexpand(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"creatNote\",\n          children: [expend ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            autoComplete: \"off\",\n            name: \"title\",\n            value: note.title,\n            onChange: addnote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 31\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"\",\n            cols: \"\",\n            placeholder: \"Take a note...\",\n            name: \"txtar\",\n            value: note.txtar,\n            onChange: addnote,\n            onClick: expandIt,\n            onDoubleClick: bcknrml\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), expend ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"plus_sign\",\n            onClick: SaveNote,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 95\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 31\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreatNote, \"XHw3VWGsAxtQvZ9pgTeOUui8+ac=\");\n\n_c = CreatNote;\nexport default CreatNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatNote\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/stikies/src/CreatNote.jsx"],"names":["React","useState","AddIcon","CreatNote","props","expend","setexpand","note","updnote","title","txtar","addnote","event","name","value","target","prevalue","SaveNote","preventDefault","passNote","expandIt","bcknrml"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC7BQ,IAAAA,KAAK,EAAE,EADsB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC,CAHyB,CAQzB;;AACA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AAEAP,IAAAA,OAAO,CAAEQ,QAAD,IAAc;AAClB,aAAO,EACH,GAAGA,QADA;AAEH,SAACH,IAAD,GAAQC;AAFL,OAAP;AAIH,KALM,CAAP;AAMH,GAVD,CATyB,CAqBzB;;;AAGA,QAAMG,QAAQ,GAAIL,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACM,cAAN;AACAd,IAAAA,KAAK,CAACe,QAAN,CAAeZ,IAAf;AACAC,IAAAA,OAAO,CAAC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAPD;;AASA,QAAMU,QAAQ,GAAG,MAAM;AACnBd,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,QAAMe,OAAO,GAAC,MAAK;AACff,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAGA,sBAAQ;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,qBACKD,MAAM,gBAAG;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,OAA/B;AACN,YAAA,YAAY,EAAC,KADP;AACa,YAAA,IAAI,EAAC,OADlB;AAC0B,YAAA,KAAK,EAAEE,IAAI,CAACE,KADtC;AAEN,YAAA,QAAQ,EAAEE;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAAH,GAEqB,IAHhC,eAII;AAAU,YAAA,IAAI,EAAC,EAAf;AAAkB,YAAA,IAAI,EAAC,EAAvB;AAA2B,YAAA,WAAW,EAAC,gBAAvC;AAAwD,YAAA,IAAI,EAAC,OAA7D;AAAqE,YAAA,KAAK,EAAEJ,IAAI,CAACG,KAAjF;AAAwF,YAAA,QAAQ,EAAEC,OAAlG;AAA2G,YAAA,OAAO,EAAES,QAApH;AAA8H,YAAA,aAAa,EAAEC;AAA7I;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKKhB,MAAM,gBAAG;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,WAAhC;AAA4C,YAAA,OAAO,EAAEY,QAArD;AAAA,mCAAgE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAhE;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA0F,IALrG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAmBH,CA3DD;;GAAMd,S;;KAAAA,S;AA4DN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport AddIcon from '@material-ui/icons/Add';\n\nconst CreatNote = (props) => {\n    const [expend, setexpand] = useState(false)\n\n    const [note, updnote] = useState({\n        title: \"\",\n        txtar: \"\"\n    })\n\n    // for store what we type in input to an array\n    const addnote = (event) => {\n\n        const { name, value } = event.target\n\n        updnote((prevalue) => {\n            return {\n                ...prevalue,\n                [name]: value\n            }\n        })\n    }\n\n    //for render save data when button click\n\n\n    const SaveNote = (event) => {\n        event.preventDefault();\n        props.passNote(note)\n        updnote({\n            title: \"\",\n            txtar: \"\"\n        })\n    }\n\n    const expandIt = () => {\n        setexpand(true)\n    }\n\n    const bcknrml=() =>{\n        setexpand(false)\n    }\n    return (<>\n        <div className=\"main_note\">\n            <form >\n                <div className=\"creatNote\">\n                    {expend ? <input type=\"text\" placeholder=\"Title\"\n                        autoComplete=\"off\" name=\"title\" value={note.title}\n                        onChange={addnote} /> : null}\n                    <textarea rows=\"\" cols=\"\"  placeholder=\"Take a note...\" name=\"txtar\" value={note.txtar} onChange={addnote} onClick={expandIt} onDoubleClick={bcknrml} />\n                    {expend ? <button type=\"button\" className=\"plus_sign\" onClick={SaveNote} ><AddIcon /></button> : null}\n                </div>\n\n            </form>\n\n        </div>\n    </>\n\n    )\n\n\n}\nexport default CreatNote"]},"metadata":{},"sourceType":"module"}