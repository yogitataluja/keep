{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/stikies/src/CreatNote.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatNote = props => {\n  _s();\n\n  const [note, updnote] = useState({\n    title: \"\",\n    txtar: \"\"\n  }); // for store what we type in input to an array\n\n  const addnote = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    updnote(prevalue => {\n      return { ...prevalue,\n        [name]: value\n      };\n    });\n    console.log(note);\n  }; //for render save data when button click\n\n\n  const SaveNote = () => {\n    event.preventDefault();\n    props.passNote(note);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"creatNote\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            autoComplete: \"off\",\n            name: \"title\",\n            value: note.title,\n            onChange: addnote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"2\",\n            cols: \"\",\n            placeholder: \"Take a note...\",\n            name: \"txtar\",\n            value: note.txtar,\n            onChange: addnote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"plus_sign\",\n            onClick: SaveNote,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 86\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreatNote, \"1fDNZHjg8akqTneCKP8QJvm5YS8=\");\n\n_c = CreatNote;\nexport default CreatNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatNote\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/stikies/src/CreatNote.jsx"],"names":["React","useState","AddIcon","CreatNote","props","note","updnote","title","txtar","addnote","event","name","value","target","prevalue","console","log","SaveNote","preventDefault","passNote"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBL,QAAQ,CAAC;AAC7BM,IAAAA,KAAK,EAAC,EADuB;AAE7BC,IAAAA,KAAK,EAAC;AAFuB,GAAD,CAA/B,CAF6B,CAO7B;;AACI,QAAMC,OAAO,GAAEC,KAAD,IAAS;AAEnB,UAAK;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAcF,KAAK,CAACG,MAAzB;AAEAP,IAAAA,OAAO,CAAEQ,QAAD,IAAY;AAChB,aAAO,EACH,GAAGA,QADA;AAEH,SAACH,IAAD,GAAQC;AAFL,OAAP;AAIH,KALM,CAAP;AAMAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACH,GAXD,CARyB,CAqBzB;;;AAGF,QAAMY,QAAQ,GAAC,MAAI;AACjBP,IAAAA,KAAK,CAACQ,cAAN;AACDd,IAAAA,KAAK,CAACe,QAAN,CAAed,IAAf;AACE,GAHH;;AAKE,sBAAQ;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,OAA/B;AAAuC,YAAA,YAAY,EAAC,KAApD;AAA2D,YAAA,IAAI,EAAC,OAAhE;AAAwE,YAAA,KAAK,EAAEA,IAAI,CAACE,KAApF;AAA2F,YAAA,QAAQ,EAAEE;AAArG;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,IAAI,EAAC,GAAf;AAAmB,YAAA,IAAI,EAAC,EAAxB;AAA4B,YAAA,WAAW,EAAC,gBAAxC;AAAyD,YAAA,IAAI,EAAC,OAA9D;AAAsE,YAAA,KAAK,EAAEJ,IAAI,CAACG,KAAlF;AAAyF,YAAA,QAAQ,EAAEC;AAAnG;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAS,YAAA,IAAI,EAAC,QAAd;AAAuB,YAAA,SAAS,EAAC,WAAjC;AAA6C,YAAA,OAAO,EAAEQ,QAAtD;AAAA,mCAAiE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAiBH,CA9CD;;GAAMd,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport AddIcon from '@material-ui/icons/Add';\n\nconst CreatNote = (props) => {\n\nconst [note, updnote]= useState({\n   title:\"\",\n   txtar:\"\"\n    })\n\n// for store what we type in input to an array\n    const addnote=(event)=>{\n\n        const{name, value}=event.target\n\n        updnote((prevalue)=>{ \n            return {\n                ...prevalue,\n                [name]: value\n            }\n        })\n        console.log(note)\n    }\n\n    //for render save data when button click\n\n\n  const SaveNote=()=>{\n    event.preventDefault();\n   props.passNote(note)\n    }\n\n    return (<>\n        <div className=\"main_note\">\n            <form >\n                <div className=\"creatNote\">\n                    <input type=\"text\" placeholder=\"Title\" autoComplete=\"off\"  name=\"title\" value={note.title} onChange={addnote}/>\n                    <textarea rows=\"2\" cols=\"\"  placeholder=\"Take a note...\" name=\"txtar\" value={note.txtar} onChange={addnote} />\n                    <button  type=\"button\" className=\"plus_sign\" onClick={SaveNote} ><AddIcon   /></button>\n                </div>\n\n            </form>\n\n        </div>\n    </>\n\n    )\n\n\n}\nexport default CreatNote"]},"metadata":{},"sourceType":"module"}